version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.5-node-browsers
        environment:
          BUNDLER_VERSION: 2.0.1
          PGHOST: localhost
          PGUSER: ec2_test
          RAILS_ENV: test
      - image: circleci/postgres:11.2-alpine-postgis
        # 環境情報を追加
        environment:
          POSTGRES_USER: ec2_test
          POSTGRES_DB: ec2_test_test
          POSTGRES_PASSWORD: ""
    # ディレクトリ情報を移動（こうしないとエラーになる?）
    working_directory: ~/ec2_test
    steps:
      - checkout

      - run:
        name: Configure Bundler
        command: |
          echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
          source $BASH_ENV
          gem install bundler

      # - run:
      #     name: setup bundler
      #     command: |
      #       sudo gem update --system
      #       sudo gem uninstall bundler
      #       sudo rm /usr/local/bin/bundle
      #       sudo gem install bundler

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      # Bundle install dependencies
      #- run: bundle install --path vendor/bundle

      # - run: # Install Ruby dependencies
      #     name: Bundle Install
      #     command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Database setup
      # DBのセットアップを修正
      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate

      # run tests!
      # RSpecの実行も修正
      - run:
          name: rubocop
          command: bundle exec rubocop

      - run:
          name: run tests
          command: |
            mkdir /tmp/test_results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            # ./cc-test-reporter before-build

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            "${TEST_FILES}"

            # ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      # Save test results for timing analysis
      - store_test_results:
          path: /tmp/test_results
      - store_artifacts:
          path: /tmp/test_results
          destination: test_results